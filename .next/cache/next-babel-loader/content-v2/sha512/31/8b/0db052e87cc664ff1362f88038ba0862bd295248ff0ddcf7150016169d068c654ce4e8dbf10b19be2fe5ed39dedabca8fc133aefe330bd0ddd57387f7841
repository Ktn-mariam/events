{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\Next.js\\\\6-practice-project2\\\\pages\\\\events\\\\[eventId].js\";\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content';\n\nfunction EventDetailPage(props) {\n  var event = props.selectedEvent;\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = EventDetailPage;\nexport var __N_SSG = true;\nexport default EventDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"sources":["C:/React/Next.js/6-practice-project2/pages/events/[eventId].js"],"names":["EventSummary","EventLogistics","EventContent","EventDetailPage","props","event","selectedEvent","title","date","location","image","description"],"mappings":";;;AACA,OAAOA,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAMC,KAAK,GAAGD,KAAK,CAACE,aAApB;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,IAAI,EAAEF,KAAK,CAACG,IADd;AAEE,MAAA,OAAO,EAAEH,KAAK,CAACI,QAFjB;AAGE,MAAA,KAAK,EAAEJ,KAAK,CAACK,KAHf;AAIE,MAAA,QAAQ,EAAEL,KAAK,CAACE;AAJlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,YAAD;AAAA,6BACE;AAAA,kBAAIF,KAAK,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAcD;;KAvBQR,e;;AA8CT,eAAeA,eAAf","sourcesContent":["import { getEventById, getFeaturedEvents } from '../../dummy-data'\r\nimport EventSummary from '../../components/event-detail/event-summary'\r\nimport EventLogistics from '../../components/event-detail/event-logistics'\r\nimport EventContent from '../../components/event-detail/event-content'\r\n\r\nfunction EventDetailPage(props) {\r\n  const event = props.selectedEvent\r\n  if (!event) {\r\n    return (\r\n      <div className=\"center\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <EventSummary title={event.title} />\r\n      <EventLogistics\r\n        date={event.date}\r\n        address={event.location}\r\n        image={event.image}\r\n        imageAlt={event.title}\r\n      />\r\n      <EventContent>\r\n        <p>{event.description}</p>\r\n      </EventContent>\r\n    </>\r\n  )\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const eventId = context.params.eventId\r\n  const event = await getEventById(eventId)\r\n  return {\r\n    props: {\r\n      selectedEvent: event,\r\n    },\r\n    revalidate: 30,\r\n  }\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const events = await getFeaturedEvents()\r\n  const paths = events.mao((event) => ({ params: { eventId: event.id } }))\r\n\r\n  return {\r\n    paths: paths,\r\n    fallback: true,\r\n  }\r\n}\r\n\r\nexport default EventDetailPage\r\n"]},"metadata":{},"sourceType":"module"}