{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\Next.js\\\\6-practice-project2\\\\pages\\\\events\\\\[...slug].js\";\nimport { useRouter } from 'next/router';\nimport { getFilteredEvents } from '../../dummy-data';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\n\nfunction FilteredEventsPage(props) {\n  const router = useRouter(); // const filterData = router.query.slug\n  // console.log(filterData)\n  // if (!filterData) {\n  //   return <p className=\"center\">Loading...</p>\n  // }\n  // const filteredYear = filterData[0]\n  // const filteredMonth = filterData[1]\n  // const numYear = +filteredYear\n  // const numMonth = +filteredMonth\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid Filter. Please adjust your values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  const filteredEvents = props.events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getServerSideProps(context) {\n  const {\n    params\n  } = context;\n  const filterData = params.slug;\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return {\n      props: {\n        hasError: true\n      }\n    };\n  }\n\n  const filteredEvents = await getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n  return {\n    props: {\n      events: filteredEvents\n    }\n  };\n}\nexport default FilteredEventsPage;","map":{"version":3,"sources":["C:/React/Next.js/6-practice-project2/pages/events/[...slug].js"],"names":["useRouter","getFilteredEvents","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","props","router","hasError","filteredEvents","events","length","date","Date","numYear","numMonth","getServerSideProps","context","params","filterData","slug","filteredYear","filteredMonth","isNaN","year","month"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAMC,MAAM,GAAGR,SAAS,EAAxB,CADiC,CAEjC;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA,MAAIO,KAAK,CAACE,QAAV,EAAoB;AAClB,wBACE;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAUD;;AAED,QAAMC,cAAc,GAAGH,KAAK,CAACI,MAA7B;;AAEA,MAAI,CAACD,cAAD,IAAmBA,cAAc,CAACE,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBACE;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAUD;;AAED,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASC,OAAT,EAAkBC,QAAQ,GAAG,CAA7B,CAAb;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;AAED,OAAO,eAAeO,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AAEA,QAAME,UAAU,GAAGD,MAAM,CAACE,IAA1B;AACA,QAAMC,YAAY,GAAGF,UAAU,CAAC,CAAD,CAA/B;AACA,QAAMG,aAAa,GAAGH,UAAU,CAAC,CAAD,CAAhC;AAEA,QAAML,OAAO,GAAG,CAACO,YAAjB;AACA,QAAMN,QAAQ,GAAG,CAACO,aAAlB;;AAEA,MACEC,KAAK,CAACT,OAAD,CAAL,IACAS,KAAK,CAACR,QAAD,CADL,IAEAD,OAAO,GAAG,IAFV,IAGAA,OAAO,GAAG,IAHV,IAIAC,QAAQ,GAAG,CAJX,IAKAA,QAAQ,GAAG,EANb,EAOE;AACA,WAAO;AACLT,MAAAA,KAAK,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ;AADF,KAAP;AAGD;;AAED,QAAMC,cAAc,GAAG,MAAMT,iBAAiB,CAAC;AAC7CwB,IAAAA,IAAI,EAAEV,OADuC;AAE7CW,IAAAA,KAAK,EAAEV;AAFsC,GAAD,CAA9C;AAKA,SAAO;AACLT,IAAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAED;AADH;AADF,GAAP;AAKD;AAED,eAAeJ,kBAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { getFilteredEvents } from '../../dummy-data'\r\nimport EventList from '../../components/events/event-list'\r\nimport ResultsTitle from '../../components/events/results-title'\r\nimport Button from '../../components/ui/button'\r\nimport ErrorAlert from '../../components/ui/error-alert'\r\n\r\nfunction FilteredEventsPage(props) {\r\n  const router = useRouter()\r\n  // const filterData = router.query.slug\r\n  // console.log(filterData)\r\n\r\n  // if (!filterData) {\r\n  //   return <p className=\"center\">Loading...</p>\r\n  // }\r\n\r\n  // const filteredYear = filterData[0]\r\n  // const filteredMonth = filterData[1]\r\n\r\n  // const numYear = +filteredYear\r\n  // const numMonth = +filteredMonth\r\n\r\n  if (props.hasError) {\r\n    return (\r\n      <>\r\n        <ErrorAlert>\r\n          <p>Invalid Filter. Please adjust your values</p>\r\n        </ErrorAlert>\r\n        <div className=\"center\">\r\n          <Button link=\"/events\">Show All Events</Button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const filteredEvents = props.events\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return (\r\n      <>\r\n        <ErrorAlert>\r\n          <p>No events found for the chosen filter</p>\r\n        </ErrorAlert>\r\n        <div className=\"center\">\r\n          <Button link=\"/events\">Show All Events</Button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const date = new Date(numYear, numMonth - 1)\r\n\r\n  return (\r\n    <>\r\n      <ResultsTitle date={date} />\r\n      <EventList items={filteredEvents} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { params } = context\r\n\r\n  const filterData = params.slug\r\n  const filteredYear = filterData[0]\r\n  const filteredMonth = filterData[1]\r\n\r\n  const numYear = +filteredYear\r\n  const numMonth = +filteredMonth\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numYear < 2021 ||\r\n    numMonth < 1 ||\r\n    numMonth > 12\r\n  ) {\r\n    return {\r\n      props: { hasError: true },\r\n    }\r\n  }\r\n\r\n  const filteredEvents = await getFilteredEvents({\r\n    year: numYear,\r\n    month: numMonth,\r\n  })\r\n\r\n  return {\r\n    props: {\r\n      events: filteredEvents,\r\n    },\r\n  }\r\n}\r\n\r\nexport default FilteredEventsPage\r\n"]},"metadata":{},"sourceType":"module"}